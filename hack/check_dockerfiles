#!/bin/bash

IMAGES=$(find images -type f -name Dockerfile* | sed 's|images/||g' | sed 's|/Dockerfile[a-z0-9.]*||g' | sort | uniq | xargs)

if ( which docker > /dev/null 2>&1 ) && ( ! which podman > /dev/null 2>&1 ); then
  DOCKER=${DOCKER:-docker}
else
  DOCKER=${DOCKER:-podman}
fi

info() {
    local MESSAGE=$1

    echo -e "\E[34m\n== $MESSAGE\E[00m";
}

usage() {
    echo "Checks Dockerfiles of specified OAI images. If no image is specified, checks all images' Dockerfiles.
    
usage: $(basename $0) [-h] [IMAGE1 [IMAGE2 [...]]]
  -h|--help:        prints this help message
  
available images:
  $IMAGES"
    exit 1
}

check_dockerfile() {
    local IMAGE=$1

    DOCKERFILES=$(find images/$IMAGE -type f -name Dockerfile* | sort | uniq | xargs)

    for i in $DOCKERFILES; do
        info "Checking $i"
        ${DOCKER} run --rm --privileged -v $PWD:/root/ \
            projectatomic/dockerfile-lint \
            dockerfile_lint -f $i
    done
}

# parse command line args
POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -h|--help)
        usage
        ;;
        *) # unknown option
        POSITIONAL+=("$key") # save it in an array for later
        shift # past argument
        ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

# if there are positional args, interpret them as list of inmages to build
if [ $# -ne 0 ]; then
  IMAGES=$*
fi

# check all specified images' Dockerfiles
for i in $IMAGES; do
    check_dockerfile $i
done
